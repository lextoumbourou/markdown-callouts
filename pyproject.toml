[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "markdown-callouts"
description = "Markdown extension: a classier syntax for admonitions"
readme = "README.md"
license = "MIT"
keywords = ["markdown", "extensions"]
authors = [
    {name = "Oleh Prypin", email = "oleh@pryp.in"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Documentation",
    "Topic :: Software Development :: Documentation",
    "Topic :: Text Processing :: Markup :: Markdown",
    "Typing :: Typed",
]
dynamic = ["version"]
requires-python = ">=3.7"
dependencies = [
    "Markdown >=3.3.3",
    #min "importlib_metadata >=4.3",
]

[project.urls]
Documentation = "https://oprypin.github.io/markdown-callouts/"
Source = "https://github.com/oprypin/markdown-callouts"
Issues = "https://github.com/oprypin/markdown-callouts/issues"
History = "https://github.com/oprypin/markdown-callouts/releases"

[project.entry-points."markdown.extensions"]
callouts = "markdown_callouts:CalloutsExtension"

[tool.hatch.version]
path = "markdown_callouts/__init__.py"

[tool.hatch.build.targets.sdist]
include = ["/markdown_callouts", "/tests"]

[tool.hatch.envs.default.scripts]
all = [
    "hatch run style:format",
    "hatch run types:check",
    "hatch run test:test",
]

[tool.hatch.envs.test]
dependencies = [
    "pytest",
    "pytest-golden",
    "beautifulsoup4",
]
[tool.hatch.envs.test.scripts]
test = [
    "pytest -q",
]

[tool.hatch.envs.types]
dependencies = [
    "mypy",
    "types-Markdown >=3.4.2",
]
[tool.hatch.envs.types.scripts]
check = [
    "mypy markdown_callouts"
]

[tool.hatch.envs.style]
skip-install = true
dependencies = [
    "pyupgrade",
    "autoflake",
    "isort",
    "black",
]
[tool.hatch.envs.style.scripts]
format = [
    "find markdown_callouts tests -name '*.py' | xargs pyupgrade --exit-zero-even-if-changed --py37-plus",
    "autoflake -r markdown_callouts tests",
    "isort -q markdown_callouts tests",
    "black -q markdown_callouts tests",
]

[tool.hatch.envs.docs]
detached = true
dependencies = [
    "mkdocs >=1.1.2",
    "mkdocs-material >=7.1.4",
    "pymdown-extensions >=8.2",
    "markdown-callouts >=0.1",
]

[tool.black]
line-length = 100

[tool.isort]
profile = "black"
line_length = 100

[tool.autoflake]
in-place = true
remove-all-unused-imports = true
remove-unused-variables = true
expand-star-imports = true

[tool.mypy]
warn_unreachable = true
no_implicit_optional = true
show_error_codes = true

[tool.pytest.ini_options]
addopts = "--tb=native"
enable_assertion_pass_hook = true
filterwarnings = ["ignore::DeprecationWarning:.*:",
                  "default::DeprecationWarning:markdown_callouts.*:"]
testpaths = ["tests"]
